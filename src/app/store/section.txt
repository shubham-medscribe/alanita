   {"sections" in data && (
            <div>
              {Array.isArray(data.sections) && (
                <div>
                  {data.sections.map(
                    (
                      section: Record<string, string | Array<string>>,
                      index: number
                    ) => (
                      <div key={index} className="">
                        <h2 className="font-bold text-xl py-2 text-[#17233e]">
                          {section.heading}
                        </h2>
                        {/*   checking in section objects contains "image" property, then should be show, only if exist */}
                      {/*   {"image" in section &&
                          typeof section.image === "string" && (
                            <div className="flex justify-center">
                              <img
                                src={section.image}
                                className="w-full sm:w-1/2 h-auto"
                                alt=""
                              />
                            </div> */}
                          )}
                        {/*  checking if content array contains object or string if so map over it and render otherwise show content as it is  */}
                        {typeof section.content === "string" ? (
                          <p className="py-1">{section.content}</p>
                        ) : Array.isArray(section.content) ? (
                          section.content.map(
                            (content: string, idx: number) => (
                              <p className="py-1" key={idx}>
                                {content}
                              </p>
                            )
                          )
                        ) : null}

                        {/*  checking "point" properties exist in sections objects if exist then render */}
                        {section && "points" in section ? (
                          <div>
                            {Array.isArray(section.points) &&
                              /* if "points" is an array of object then map it */
                              section.points.map(
                                (
                                  point:
                                    | string
                                    | { heading: string; content: string },
                                  idx: number
                                ) => (
                                  <div className="flex" key={idx}>
                                    {typeof point === "string" ? (
                                      <p>
                                        {" "}
                                        <FontAwesomeIcon
                                          className="text-[#d6171f]"
                                          icon={faJetFighter}
                                        />
                                        &nbsp;{point}
                                      </p>
                                    ) : (
                                      /*  if "points" is an string array then normally render it */
                                      <>
                                        <h2>
                                          <FontAwesomeIcon
                                            className="text-[#d6171f]"
                                            icon={faJetFighter}
                                          />{" "}
                                          {point.heading}
                                          <span className="font-bold">
                                            {":"}
                                          </span>
                                          &nbsp;
                                        </h2>
                                        <p>{point.content}</p>
                                      </>
                                    )}
                                  </div>
                                )
                              )}
                          </div>
                        ) : null}
                      </div>
                    )
                  )}
                </div>
              )}
            </div>
          )}